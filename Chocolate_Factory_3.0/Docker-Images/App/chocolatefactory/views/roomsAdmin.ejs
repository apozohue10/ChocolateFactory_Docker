<!DOCTYPE html>  
<html lang="en">  
  <head>
    <meta charset="utf-8">
    <title>Rooms monitoring</title>
    <script src="http://localhost:1028/socket.io/socket.io.js"></script>
    <script src="http://code.jquery.com/jquery-2.1.4.min.js"></script>
    <script type="text/javascript" src="javascripts/bootstrap/bootstrap.min.js"></script>
    <script type="text/javascript" src="javascripts/liquidFillGauge.js"></script>
    <script type="text/javascript" src="javascripts/thermometer.js"></script>
    <script type="text/javascript" src="javascripts/gauge.js"></script>
    <script src="http://d3js.org/d3.v3.min.js" language="JavaScript"></script>
    <script type="text/javascript" src="javascripts/singout.js"></script>
    <script>
    $(document).ready(function() {
        var socket = io();
        var config2 = liquidFillGaugeDefaultSettings();
          config2.circleColor = "#D4AB6A";
          config2.textColor = "#553300";
          config2.waveTextColor = "#805615";
          config2.waveColor = "#AA7D39";
          config2.circleThickness = 0.1;
          config2.circleFillGap = 0.2;
          config2.textVertPosition = 0.8;
          config2.waveAnimateTime = 2000;
          config2.waveHeight = 0.3;
          config2.waveCount = 1;

      	var gauges = [];
        function createGauge(name, label, min, max){
	          var config = 
	          {
	            size: 230,
	            label: label,
	            min: undefined != min ? min : 0,
	            max: undefined != max ? max : 100,
	            minorTicks: 5
	          };
	        
	        var range = config.max - config.min;
	        config.yellowZones = [{ from: config.min + range*0.75, to: config.min + range*0.9 }];
	        config.redZones = [{ from: config.min + range*0.9, to: config.max }];
	        
	        gauges[name] = new Gauge(name + "GaugeContainer", config);
      	}

      	function createDangerGauge(name, label, min, max) {
	          var config = 
	          {
	            size: 230,
	            label: label,
	            min: undefined != min ? min : 0,
	            max: undefined != max ? max : 100,
	            minorTicks: 5
	          };
	        
	        var range = config.max - config.min;
	        config.yellowZones = [{ from: config.min + range*0.4, to: config.min + range*0.7 }];
	        config.redZones = [{ from: config.min + range*0.7, to: config.max }];
	        
	        gauges[name] = new Gauge(name + "GaugeContainer", config);
      	}


      	function createGauges() {
        	createGauge("temp", "ºc", 0, 40);
	        createGauge("pres", "mmhg", 0, 2000);
	        createGauge("power", "kw", 0, 15000);
	        createGauge("gum", "cm2", 0, 50);
	        createGauge("water", "kmh", 0, 70);
	        createGauge("tv", "nº", 0, 50);
	        createGauge("vol", "ºc/atm", 0, 500);
      	}

        socket.on('updateCR', function (data) {
        	var tempAttr;
         	var pressAttr;
         	var rivAttr;
         	var watAttr;
          	for (i=0; i < data.attributes.length; i++) {
          		switch (data.attributes[i].name) {
          			case "Temperature":
          				var tempAttr = data.attributes[i];
          				break;
          			case "Pressure":
          				var pressAttr = data.attributes[i];
          				break; 
          			case "River level":
          				var rivAttr = data.attributes[i];
          				break;
          			case "Waterfall speed":
          				var watAttr = data.attributes[i];
          				break;
          		}
          	} 
          	var tempIcon= '<span id="tempGaugeContainer"></span>';
          	var presIcon= '<span id="presGaugeContainer"></span>';
          	var rivIcon= '<svg id="fillgauge3" width="80%" height="200"></svg>';
          	var watIcon= '<span id="waterGaugeContainer"></span>';
	        createGauges();
	        $("#name").html(data.id);
	        $('#natt1').html(tempAttr.name);
	        $('#natt2').html(pressAttr.name);
	        $('#natt3').html(rivAttr.name);
	        $('#natt4').html(watAttr.name);
	        $('#att1').html(tempIcon);
	        $('#att2').html(presIcon);
	        $('#att3').html(rivIcon);
	        $('#att4').html(watIcon);
	        loadLiquidFillGauge("fillgauge3", rivAttr.value, config2);
	        gauges["temp"].render();
	        gauges["pres"].render();
	        gauges["water"].render();
	        gauges["temp"].redraw(Math.round(tempAttr.value * 100) / 100);
        	gauges["pres"].redraw(Math.round(pressAttr.value * 100) / 100);
          	gauges["water"].redraw(Math.round(watAttr.value * 100) / 100); 
        });

        socket.on('updateIR', function (data) { 
         	var tempAttr;
         	var pressAttr;
         	var chewAttr;
         	var volAttr;
          	for (i=0; i < data.attributes.length; i++) {
          		switch (data.attributes[i].name) {
          			case "Temperature":
          				var tempAttr = data.attributes[i];
          				break;
          			case "Pressure":
          				var pressAttr = data.attributes[i];
          				break; 
          			case "Experimental Chewing Gum size":
          				var chewAttr = data.attributes[i];
          				break;
          			case "Experiments volatility":
          				var volAttr = data.attributes[i];
          				break;
          		}
          	} 
          	var tempIcon= '<span id="tempGaugeContainer"></span>';
          	var presIcon= '<span id="presGaugeContainer"></span>';
          	var gumIcon= '<span id="gumGaugeContainer"></span>';
          	var volIcon= '<span id="volGaugeContainer"></span>';
	        createGauges();
	        $("#name").html(data.id);
	        $('#natt1').html(tempAttr.name);
	        $('#natt2').html(pressAttr.name);
	        $('#natt3').html(chewAttr.name);
	        $('#natt4').html(volAttr.name);
	        $('#att1').html(tempIcon);
	        $('#att2').html(presIcon);
	        $('#att3').html(gumIcon);
	        $('#att4').html(volIcon);
	        gauges["temp"].render();
	        gauges["pres"].render();
	        gauges["gum"].render();
	        gauges["vol"].render();
	        gauges["temp"].redraw(Math.round(tempAttr.value * 100) / 100);
        	gauges["pres"].redraw(Math.round(pressAttr.value * 100) / 100);
          	gauges["gum"].redraw(Math.round(chewAttr.value * 100) / 100);
          	gauges["vol"].redraw(Math.round(volAttr.value * 100) / 100);
        });

        socket.on("updateTR", function (data){
        	var tempAttr;
         	var pressAttr;
         	var powAttr;
         	var tvAttr;
          	for (i=0; i < data.attributes.length; i++) {
          		switch (data.attributes[i].name) {
          			case "Temperature":
          				var tempAttr = data.attributes[i];
          				break;
          			case "Pressure":
          				var pressAttr = data.attributes[i];
          				break; 
          			case "TVs on":
          				var tvAttr = data.attributes[i];
          				break;
          			case "Power consumed":
          				var powAttr = data.attributes[i];
          				break;
          		}
          	} 
          	var tempIcon= '<span id="tempGaugeContainer"></span>';
          	var presIcon= '<span id="presGaugeContainer"></span>';
          	var tvIcon= '<span id="tvGaugeContainer"></span>';
          	var powIcon= '<span id="powerGaugeContainer"></span>';
	        createGauges();
	        $("#name").html(data.id);
	        $('#natt1').html(tempAttr.name);
	        $('#natt2').html(pressAttr.name);
	        $('#natt3').html(tvAttr.name);
	        $('#natt4').html(powAttr.name);
	        $('#att1').html(tempIcon);
	        $('#att2').html(presIcon);
	        $('#att3').html(tvIcon);
	        $('#att4').html(powIcon);
	        gauges["temp"].render();
	        gauges["pres"].render();
	        gauges["tv"].render();
	        gauges["power"].render();
	        gauges["temp"].redraw(Math.round(tempAttr.value * 100) / 100);
        	gauges["pres"].redraw(Math.round(pressAttr.value * 100) / 100);
          	gauges["tv"].redraw(Math.round(tvAttr.value * 100) / 100);
          	gauges["power"].redraw(Math.round(powAttr.value * 100) / 100);
        });

        $("#subChocolate").click(function(){
          socket.emit("subchocolate", "Subscribing!");
        });
        $("#subInventing").click(function(){
          socket.emit("subinventing", "Subscribing!");
        });
        $("#subTelevision").click(function(){
          socket.emit("subtelevision", "Subscribing!");
        });
        
     });

  	</script>
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.3/css/bootstrap.min.css">
    <link rel="stylesheet" href="stylesheets/styles.css">
  </head>
  		<body id="roomsAdmin">
    		<div id="wraped">
  			<div class="container">
		   	<div id='warped'>
		  	<div class="container text-center align-center">
		    <h1 class="page-header">Chocolate Factory Control Panel</h1>
		    <h2 id="name"></h2>
		    <div class="logout"><a href="#" onclick="Fiware.signOut('account'); return false">Log Out</a></div> 
		    <div class="col-md-3"><h3 id="natt1"></h3><span id="att1"></span></div>
		    <div class="col-md-3"><h3 id="natt2"></h3><span id="att2"></span></div>
		    <div class="col-md-3"><h3 id="natt3"></h3><div id="att3"></div></div>
		    <div class="col-md-3"><h3 id="natt4"></h3><span id="att4"></span></div>
		    <div class="btn-group btn-rooms" align="center"> 
		       <button id="subChocolate" class="btn btn-primary" type="submit">Chocolate Room</button>
		       <button id="subInventing" class="btn btn-primary" type="submit">Inventing Room</button>
		       <button id="subTelevision"  class="btn btn-primary" type="submit">Television Room</button>
		    </div> 
		    </div>
		    </div>
		    </div>
    		</div>
     		<footer class="footer" align="center">  
  			</footer>
  		</body>
</html>  
